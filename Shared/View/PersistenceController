import CoreData
import UIKit

struct PersistenceController {
static let shared = PersistenceController()
static var preview: PersistenceController = {
let result = PersistenceController()
let viewContext = result.container.viewContext
for i in 0 ..< 10 {

        let newCard = CardEntity(context: viewContext)
    newCard.name = "File #\(i)"
    newCard.photo = UIImage(systemName: "multiply.circle.fill")
    newCard.time = Date()
    newCard.note = ""
        let newFolder = FolderEntity(context : viewContext)
        newFolder.folderName = "Folder #\(i)"
    }
    do {
        try viewContext.save()
    } catch {
        
        let nsError = error as NSError
        fatalError("Unresolved error \(nsError), \(nsError.userInfo)")
    }
    return result
}()

let container: NSPersistentCloudKitContainer = {
    let container = NSPersistentCloudKitContainer(name: "CardModel")
    container.viewContext.automaticallyMergesChangesFromParent = true
    container.loadPersistentStores(completionHandler: { (storeDescription, error) in
        if let error = error as NSError? {
            
            fatalError("Unresolved error \(error), \(error.userInfo)")
        }
    })
    return container
}()
}
